---
- name: Initialize Kubernetes master with kubeadm init.
  become: yes
  command: >
    kubeadm init
    --pod-network-cidr={{ kubernetes_pod_network.cidr }}
    --cri-socket {{ cri_socket }}
    --ignore-preflight-errors={{ kubernetes_ignore_preflight_errors }}
    {{ kubernetes_kubeadm_init_extra_opts }}
  register: kubeadmin_init

- name: Print the init output to screen.
  debug:
    var: kubeadmin_init.stdout
    verbosity: 2

- name: Fix permissions on /etc/kubernetes/admin.conf
  become: yes
  file:
    path: /etc/kubernetes/admin.conf
    mode: '0644'

- name: Ensure .kube directory exists.
  file:
    path: ~/.kube
    state: directory
    mode: 0755

- name: Symlink the kubectl admin.conf to ~/.kube/conf.
  file:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    state: link

# TODO: Check if taint exists with something like `kubectl describe nodes
# instead of using kubernetes_init_stat.stat.exists check.
- name: Make pods to be scheduled on control-plane nodes
  shell: |
    kubectl label nodes --all node-role.kubernetes.io/worker=""
    kubectl taint nodes --all node-role.kubernetes.io/control-plane-
  when:
    - kubernetes_allow_pods_on_master | bool

- name: Configure Flannel networking.
  when: kubernetes_pod_network.cni == 'flannel'
  block:
    - name: Download flannel manifest
      get_url:
        url: "{{ kubernetes_flannel_manifest_file }}"
        dest: "{{ ansible_user_dir }}/kube-flannel.yml"

    - name: Set networking backend to host-gw
      command: sed -i 's/vxlan/host-gw/' {{ ansible_user_dir }}/kube-flannel.yml
      tags: ['skip_ansible_lint']

    - name: Install pod network.
      command: "{{ zj_item }}"
      with_items:
        - kubectl apply -f {{ ansible_user_dir }}/kube-flannel.yml
      loop_control:
        loop_var: zj_item
      register: flannel_result
      changed_when: "'created' in flannel_result.stdout"

- name: Find etcd process id
  become: yes
  command: pgrep etcd
  register: pid

- name: Set etcdâ€™s disk priority
  become: yes
  command: ionice -c2 -n0 -p  {{ pid.stdout }}
